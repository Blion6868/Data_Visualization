# -*- coding: utf-8 -*-
"""Book_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1H1JHWiBM1fy412peE0kU3teZWlIz9NG7
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import plotly.express as px

"""Data courtesy of Kaggle: https://www.kaggle.com/datasets/drahulsingh/best-selling-books"""

#Load data

df = pd.read_csv(r"books")
df.head()

#value count for the various genres

df['Genre'].value_counts()

#See if there are any missing values

df.isnull().sum()

df.describe()

"""The mean for sales in 30 million, with a min of 10 and a max of 200 million"""

#Additional way to view quantiles

df['Approximate sales in millions'].quantile([0.05, 0.25, 0.5, 0.75, 0.95])

df.shape

df.info()

#Binning for bestellers sales

binpop = pd.cut(df['Approximate sales in millions'], 10)
binpop.value_counts()

df['Sales Bins'] = binpop

plt.figure(figsize=(10, 6))
sns.countplot(data=df, x='Sales Bins')
plt.xlabel('Sales Bins')
plt.ylabel('Count')
plt.title('Distribution of Sales')
plt.xticks(rotation=45)
plt.show()

#Percentages for each bin

bin_counts = df['Sales Bins'].value_counts()

total_rows = len(df)

bin_percentages = (bin_counts / total_rows) * 100

print(bin_percentages)

binpop.value_counts()

"""The vast majority of books (65%) are found in the first bin, between 9.81 and 29.0 million with a count of 113."""

#Scatter plot for sales

plt.figure(figsize=(10, 6))
plt.scatter(x=df['First published'], y=df['Approximate sales in millions'])


plt.xlabel('publication year')
plt.ylabel('Approximate Sales in Millions')
plt.title('Scatter Plot of Sales in the Millions')
plt.show()

"""The majority of bestsellers were published between 1900 and 2000, with 1300 being a dramatic outlier"""

min(df['First published'])

# Determine top 10 books in terms of sales

titles = df.sort_values(by='Approximate sales in millions', ascending=False).head(10)


colors = ['blue', 'green', 'red', 'orange', 'purple', 'yellow', 'cyan', 'magenta', 'gray', 'brown']

plt.figure(figsize=(10, 6))

for i, (book, sales) in enumerate(zip(titles['Book'], titles['Approximate sales in millions'])):
    plt.bar(book, sales, color=colors[i])

plt.xticks(rotation=15, ha='right')
plt.title('Top 10 Bestsellers')
plt.show();

#Earliest bestseller

earliest_publishing_date = df['First published'].min()
earliest_book = df.loc[df['First published'] == earliest_publishing_date, 'Book'].iloc[0]
earliest_book

#Genre Count

genre_count = df['Genre'].value_counts().head(10)

plt.figure(figsize=(20, 10))

sns.countplot(data=df, x='Genre', order=genre_count.index)
plt.xticks(rotation=45)
plt.xlabel('Genre')
plt.ylabel('Count')
plt.title('Genre Count')
plt.show()

# Aggregate sales by genre
sales_by_genre = df.groupby('Genre')['Approximate sales in millions'].sum().sort_values(ascending=False)

# Select top ten genres
top_three_genres = sales_by_genre.head(5).index.tolist()

# Filter DataFrame for top ten genres
top_genres_df = df[df['Genre'].isin(top_three_genres)]

plt.figure(figsize=(12, 8))
sns.lineplot(data=top_genres_df, x=top_genres_df.index, y='Approximate sales in millions', hue='Genre')
plt.title('Top Ten Bestseller Sales by Genre')
plt.legend(title='Genre', loc='upper left')
plt.show()

"""Clearly the most popular genre is the Novel, followed by Children's Literature, Self-Help, and Fantasy"""

#Determine the mean sales for each genre

df.groupby('Genre')['Approximate sales in millions'].mean()

#Determine the top 10 genres

top_genres = df['Genre'].value_counts().head(10)
top_genres = top_genres.sort_values(ascending=False)

plt.figure(figsize=(18, 8))
sns.countplot(data=df[df['Genre'].isin(top_genres.index)], x='Genre', order=top_genres.index)
plt.xticks(rotation=15, ha='right')


plt.title('Top Ten Genres')
plt.show()
plt.show()

top_genre = df['Genre'].value_counts().head(10)
top_genre = top_genre.sort_values(ascending=False)

plt.figure(figsize=(20, 10))
top_genre.plot(kind='pie', autopct='%1.1f%%', startangle=140)
plt.axis('equal')

plt.title('Genre Percentages')
plt.show()
plt.show()

#Determine titles for the Fantasy genre

df[df['Genre'] == 'Fantasy']['Book']

#dDtermine titles for the novel genre

df[df['Genre'] == 'Novel']['Book']

#Determine authors with the most books on the best seller list

top_authors = df['Author(s)'].value_counts().head(10)
top_authors = top_authors.sort_values(ascending=False)

plt.figure(figsize=(18, 8))
sns.countplot(data=df[df['Author(s)'].isin(top_authors.index)], x='Author(s)', order=top_authors.index)
plt.xticks(rotation=15, ha='right')
plt.show()

#Determine titels for J.K. Rowling's books

df[df['Author(s)'] == 'J. K. Rowling']['Book']

#Plot the sales in millions

plt.figure(figsize=(18, 8))
sns.histplot(data=df, x='Approximate sales in millions', bins=30, kde=True)

plt.xlabel('Approximate Sales in Millions')
plt.title('Book Sales in the Millions')
plt.show()
plt.show()

df['Approximate sales in millions'].mean()

"""Clearly, there are a number of outliers around 200 million. To isolate these further, let's use a boxplot"""

plt.figure(figsize=(18, 8))
sns.boxplot(data=df, x="Approximate sales in millions");

#Determine outliers

df[df['Approximate sales in millions'] >= 75.0]

df[df['Approximate sales in millions'] >= 75.0]['Genre'].value_counts()

"""In the top ten, there are four Fantasy books represented. The rest are single entries, solodifying Fantasy as the best selling genre (outside of Unknown)"""

#Determine the top 10 years with the most bestsellers

top_years = df['First published'].value_counts().head(10)
top_years = top_years.sort_values(ascending=False)

plt.figure(figsize=(18, 8))
sns.countplot(data=df[df['First published'].isin(top_years.index)], x='First published', order = top_years.index)
plt.xticks(rotation=0)

plt.xlabel('First Published')
plt.title('Bestseller Count Based on Year of Publication')
plt.show()

#What are the bestseller titles in 1979?

df[df['First published'] == 1979]['Book']

df[df['First published'] == 1979]['Genre']

#What are the bestseller titles in 1988?

df[df['First published'] == 1988]['Book']

df[df['First published'] == 1988]['Genre']

#Bestsellers from the 20th century

years_to_select = list(range(1900, 2000))
twenty_cen = df[df['First published'].isin(years_to_select)]['Genre'].value_counts().head(15)

plt.figure(figsize=(20, 10))
twenty_cen.plot(kind='pie', autopct='%1.1f%%', startangle=140)
plt.axis('equal')
plt.show()

#Bestsellers from the 21st century

years_to_select = list(range(2000, 2018))
twenty_first = df[df['First published'].isin(years_to_select)]['Genre'].value_counts()

#pie chart for the 21st_century

plt.figure(figsize=(20, 10))
twenty_first.plot(kind='pie', autopct='%1.1f%%', startangle=140)
plt.axis('equal')
plt.show()

"""The Novel has been the most popular genre from the 20th century on, with Young Adult fiction taking over Children's Literature as the second most lucrative genre."""

#Most popular genres in 1952?

df[df['First published'] == 1952]['Genre']

#Top language

top_language = df['Original language'].value_counts().head(10)
top_language = top_language.sort_values(ascending=False)

plt.figure(figsize=(18, 8))
sns.countplot(data=df[df['Original language'].isin(top_language.index)], x='Original language', order = top_language.index)
plt.xticks(rotation=0)
plt.show()

plt.figure(figsize=(20, 10))
top_language.plot(kind='pie', autopct='%1.1f%%', startangle=140)
plt.axis('equal')
plt.show()

"""English language books are the vast majority with 78.4% of sales"""

#Becasue English is so overrepresented, I removed English to get a better sense of the spread of language

top_languages = df[df['Original language'] != 'English']['Original language'].value_counts().head(10)
top_languages = top_languages.sort_values(ascending=False)

plt.figure(figsize=(18, 8))
sns.countplot(data=df[df['Original language'].isin(top_languages.index)], x='Original language', order=top_languages.index)
plt.xticks(rotation=0)
plt.show()

import plotly.express as px

# Replace NaN values with 'Unknown' in 'Genre' and 'Author(s)' columns
df['Genre'] = df['Genre'].fillna('Unknown')
df['Author(s)'] = df['Author(s)'].fillna('Unknown')

# Add 'Unknown' to the categories of the categorical columns and fill NaN
for col in ['Original language', 'Genre']:
    if pd.api.types.is_categorical_dtype(df[col]):
        df[col] = df[col].cat.add_categories(['Unknown'])
        # Fill NaN values for this specific column
        df[col] = df[col].fillna('Unknown')

# Create the sunburst plot
fig = px.sunburst(
    df,
    path=['Original language', 'Genre', 'Author(s)'],
    values='Approximate sales in millions',
    color='Approximate sales in millions',
    height=1200,
    width=1200
)

fig.update_layout(title_pad_l=330)
fig.show()

"""# Findings

1. The most popular genre is the Novel (41.2%), followed by Children's Literature (15.5%), Self-Help (9.5%), and Fantasy (8.1%)
2. Young Adult fiction has taken over Children's Literature as the second most lucrative genre in the 21st century.
3. The most popular language is English by a large margin (78.4%), followed by Russian (3.6%)
4. The vast majority of books (65%) are found in the first bin, between 9.81 and 29.0 million with a count of 113.
5. The most lucrative year for bestsellers was 1988, followed closely by 1979
6. The mean sales figures is 30.1 million
7. The standard deviaition of sales is 27.95, which is influenced by extreme outliers, such as The Little Prince and A Tale of Two Cities
8. J.K. Rowling has the most sales as a single author, followed by Suzanne Collins, Roald Dahl, and Dan Brown
9. Only 6 books have over 100 million in sales, and two out of those six are considered Fantasy
10. Only 2 books have over 200 million in sales: A Tale of Two Cities and the Little Prince
11. The newest genre to make it to the bestseller list is Young adult romantic novel
12. Only 1 book in this dataset was written before 1700, which is Dante's The Divine Comedy
13. The majority of bestsellers were published between 1900 and 2000, with 1300 being a dramatic outlier

# Assertions to Test

1. 11 books with over 100 million in sales may be skewing the data
2. Fantasy may be overrepresented due to the popularity of Rowling's Harry Potter series and The Hobbit
"""

df2 = df.drop(df[df['Author(s)'] == 'J.K. Rowling'].index)

df2 = df.drop(df[df['Book'].str.contains('Potter')].index)

#After removing Harry Potter and the Novel, what is the most represented genre in terms of bestsellers?

# Filter out 'Unknown' before calculating top genres
filtered_df2 = df2[df2['Genre'] != 'Unknown']

# Get the top 10 genres
top_genres = filtered_df2['Genre'].value_counts().head(10)
top_genres = top_genres.sort_values(ascending=False)

# Plot
plt.figure(figsize=(18, 8))
sns.countplot(data=filtered_df2[filtered_df2['Genre'].isin(top_genres.index)], x='Genre', order=top_genres.index)
plt.xticks(rotation=15, ha='right')
plt.show()

#let's remove authors with over 100 million sales from the dataset to see if Fantasy remains the best represented genre amongst bestsellers

df3 = df.drop(df[df['Author(s)'] == 'J.K. Rowling'].index)
df3 = df.drop(df[df['Author(s)'] == 'Charles Dickens'].index)
df3 = df.drop(df[df['Author(s)'] == 'Antoine de Saint-Exupéry'].index)
df3 = df.drop(df[df['Author(s)'] == 'Agatha Christie'].index)
df3 = df.drop(df[df['Author(s)'] == 'Cao Xueqin'].index)
df3 = df.drop(df[df['Author(s)'] == 'J. R. R. Tolkien'].index)

df3 = df.drop(df[df['Book'].str.contains('Potter')].index)
df3 = df.drop(df[df['Book'] == 'A Tale of Two Cities'].index)
df3 = df.drop(df[df['Book'] == 'The Hobbt'].index)
df3 = df.drop(df[df['Book'] == 'Dream of the Red Chamber (紅樓夢)'].index)
df3 = df.drop(df[df['Book'] == 'The Little Prince (Le Petit Prince)'].index)
df3 = df.drop(df[df['Book'] == 'And Then There Were'].index)

#after removing Harry Potter, what is the most represented genre in terms of bestsellers?

# Get the top 10 genres, excluding "Unknown"
top_genres = df3[df3['Genre'] != 'Unknown']['Genre'].value_counts().head(10)
top_genres = top_genres.sort_values(ascending=False)

# Plot
plt.figure(figsize=(18, 8))
sns.countplot(data=df3[df3['Genre'].isin(top_genres.index) & (df3['Genre'] != 'Unknown')], x='Genre', order=top_genres.index)
plt.xticks(rotation=15, ha='right')
plt.show()

"""Conclusion: Even after removing J.K. Rowling and authors with over 100 million in sales, Fantasy remains the most lucrative genre, which makes sense, given that the novel is perhaps the most broad genre. With that being said, the growing popularity of Young Adult and Fantasy, it would be smart to promote these genres."""

























































